//Notas respecto a los videos.

//Las bases de datos de MongoDB tiene los datos almacenados en "documentos", los cuales se representan con objetos .json

//La agrupación de múltiples documentos se denominan "colecciones"

//El objeto lo escribimos en consola con notación js, pero luego se traduce a .json.

//Se almacena en una implementación llamada "bison", convirtiendo el json a binario y lo almacena en la BD

//Schema permite almacenar en una colección atributos con distintas características ( de tipos distintos ) (esquema flexible)

//

//
// use heroclash4geeks

//insert data

//Creamos un documento:
db.characters.insertOne({
  name: 'Darth Vader',
  characterClass: 'Sith',
  level: 11,
  hp: 101,
  mana: 22,
  attack: 11,
  items: ['Lightsaber', 'Death Star'],
});

db.characters.insertOne({
  name: 'Obi-Wan Kenoby',
  characterClass: 'Jedi',
  level: 10,
  hp: 90,
  mana: 32,
  attack: 14,
  items: ['Lightsaber'],
});

// query
db.characters.find();
db.characters.find({ characterClass: 'Jedi' });
db.characters.find({ mana: { $gt: 30 } });
db.characters.find({ mana: { $gt: 30 } }, { name: 1, characterClass: 1 });
db.characters.find(
  { mana: { $gt: 30 } },
  { name: 1, characterClass: 1, _id: 0 }
);
db.characters.find({ _id: ObjectId('6678cb61ee1852707248c9d0') }); //change the id according to the autogenerated value

//update
db.characters.updateOne(
  { name: 'Darth Vader' },
  { $set: { name: 'Anakin Skywalker', characterClass: 'Fallen Jedi' } }
);

//También existe el método "replace" para cambiar el objeto completo

//un "upserted" sirve para que, en caso de que no exista el elemento que queremos modificar, se cree automáticamente

//delete
db.characters.deleteOne({ characterClass: 'Jedi' });
